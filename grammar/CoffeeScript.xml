<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE syntax SYSTEM "Syntax.dtd">
<?xml-stylesheet type="text/xsl" href="Syntax.xsl"?>
<syntax language="CoffeeScript" start="Source">
  <rule name="Source">
    <definition>
      <optional>
        <nonterminal name="Body"/>
      </optional>
    </definition>
  </rule>
  <rule name="Body">
    <definition>
      <nonterminal name="Line"/>
      <repeated>
        <optional>
          <nonterminal name="T"/>
          <nonterminal name="Line"/>
        </optional>
      </repeated>
      <optional>
        <nonterminal name="T"/>
      </optional>
    </definition>
  </rule>
  <rule name="T">
    <comment>TERMINATOR</comment>
    <definition>
      <terminal>;</terminal>
      <comment>semicolon</comment>
    </definition>
    <definition>
      <optional>
        <terminal type="regular">\u000D</terminal>
      </optional>
      <terminal type="regular">\u000A</terminal>
      <comment>line break</comment>
    </definition>
    <definition>
      <terminal type="regular">^\s*#(?!##[^#]).*</terminal>
      <comment>line comment</comment>
    </definition>
    <definition>
      <repeated>
        <nonterminal name="T"/>
      </repeated>
    </definition>
  </rule>
  <comment>
   Block comments can be embedded or multi-line according to the next pattern:
   &lt;br/&gt;&lt;span class="regular"&gt;
   ^\s*###([^#][\s\S]*?)(?:###[^\n\S]*|###$)
   &lt;/span&gt;
  </comment>
  <rule name="Block">
    <definition>
      <nonterminal name="IN"/>
      <optional>
        <nonterminal name="Body"/>
      </optional>
      <nonterminal name="OUT"/>
    </definition>
  </rule>
  <rule name="IN">
    <definition>
      <terminal>then</terminal>
      <comment>inline INDENT closed by a TERMINATOR or by the syntax</comment>
    </definition>
    <definition>
      <terminal type="regular">\n+[^\n\S]+</terminal>
      <comment>newline INDENT closed by newline OUTDENT</comment>
    </definition>
  </rule>
  <comment>
   Operators and backslash at the end of a line suppress the following &lt;br/&gt;
   TERMINATOR or IN token. The same happens by&amp;nbsp; &lt;b&gt;&lt;code
   style="color:black"&gt;extends&lt;/code&gt;&lt;/b&gt;&amp;nbsp; and
   &amp;nbsp;&lt;b&gt;&lt;code style="color:black"&gt;default&lt;/code&gt;&lt;/b&gt; .
  </comment>
  <rule name="Line">
    <definition>
      <nonterminal name="Expression"/>
    </definition>
    <definition>
      <nonterminal name="Statement"/>
    </definition>
    <definition>
      <nonterminal name="FuncDirective"/>
    </definition>
  </rule>
  <rule name="Expression">
    <definition>
      <nonterminal name="Value"/>
    </definition>
    <definition>
      <nonterminal name="Operation"/>
    </definition>
    <definition>
      <nonterminal name="Assignment"/>
    </definition>
    <definition>
      <nonterminal name="Function"/>
    </definition>
    <definition>
      <nonterminal name="Conditional"/>
    </definition>
    <definition>
      <nonterminal name="Switch"/>
    </definition>
    <definition>
      <nonterminal name="Loop"/>
    </definition>
    <definition>
      <nonterminal name="ForLoop"/>
    </definition>
    <definition>
      <nonterminal name="Try"/>
    </definition>
    <definition>
      <nonterminal name="Throw"/>
    </definition>
    <definition>
      <nonterminal name="Yield"/>
    </definition>
    <definition>
      <nonterminal name="Class"/>
    </definition>
  </rule>
  <rule name="Value">
    <definition>
      <nonterminal name="Literal"/>
    </definition>
    <definition>
      <nonterminal name="Parenthetical"/>
    </definition>
    <definition>
      <nonterminal name="Range"/>
    </definition>
    <definition>
      <nonterminal name="Assignable"/>
    </definition>
    <definition>
      <nonterminal name="Invocation"/>
    </definition>
    <definition>
      <nonterminal name="This"/>
    </definition>
    <definition>
      <nonterminal name="SuperProperty"/>
    </definition>
  </rule>
  <rule name="Literal">
    <definition>
      <terminal>undefined</terminal>
    </definition>
    <definition>
      <terminal>null</terminal>
    </definition>
    <definition>
      <nonterminal name="Boolean"/>
    </definition>
    <definition>
      <nonterminal name="Number"/>
    </definition>
    <definition>
      <nonterminal name="String"/>
    </definition>
    <definition>
      <nonterminal name="RegExp"/>
    </definition>
    <definition>
      <nonterminal name="JavaScript"/>
    </definition>
  </rule>
  <rule name="Boolean">
    <definition>
      <terminal>true</terminal>
    </definition>
    <definition>
      <terminal>false</terminal>
    </definition>
    <definition>
      <terminal>yes</terminal>
    </definition>
    <definition>
      <terminal>no</terminal>
    </definition>
    <definition>
      <terminal>on</terminal>
    </definition>
    <definition>
      <terminal>off</terminal>
    </definition>
  </rule>
  <rule name="Number">
    <definition>
      <terminal type="regular">^0b[01]+</terminal>
      <comment>binary</comment>
    </definition>
    <definition>
      <terminal type="regular">^0o[0-7]+</terminal>
      <comment>octal</comment>
    </definition>
    <definition>
      <terminal type="regular">^0x[\dA-Fa-f]+</terminal>
      <comment>hexadecimal</comment>
    </definition>
    <definition>
      <terminal type="regular">^\d*\.?\d+(?:e[+-]?\d+)?</terminal>
      <comment>decimal</comment>
    </definition>
    <definition>
      <terminal>Infinity</terminal>
    </definition>
    <definition>
      <terminal>NaN</terminal>
    </definition>
  </rule>
  <rule name="Parenthetical">
  <comment>creates value from expression</comment>
    <definition>
      <terminal>(</terminal>
      <nonterminal name="Expression"/>
      <terminal>)</terminal>
    </definition>
    <definition>
      <terminal>(</terminal>
      <nonterminal name="IN"/>
      <nonterminal name="Expression"/>
      <nonterminal name="OUT"/>
      <terminal>)</terminal>
    </definition>
  </rule>
  <rule name="Operation">
    <definition>
      <terminal>new</terminal>
      <nonterminal name="SimpleAssignable"/>
    </definition>
    <definition>
      <nonterminal name="SimpleAssignable"/>
      <nonterminal name="Step"/>
    </definition>
    <definition>
      <nonterminal name="Step"/>
      <nonterminal name="SimpleAssignable"/>
    </definition>
    <definition>
      <nonterminal name="Expression"/>
      <terminal>?</terminal>
    </definition>
    <definition>
      <nonterminal name="Unary"/>
      <nonterminal name="Expression"/>
    </definition>
    <definition>
      <nonterminal name="Expression"/>
      <terminal>**</terminal>
      <nonterminal name="Expression"/>
    </definition>
    <definition>
      <nonterminal name="Expression"/>
      <nonterminal name="Multiplicative"/>
      <nonterminal name="Expression"/>
    </definition>
    <definition>
      <nonterminal name="Expression"/>
      <nonterminal name="Additive"/>
      <nonterminal name="Expression"/>
    </definition>
    <definition>
      <nonterminal name="Expression"/>
      <nonterminal name="Shift"/>
      <nonterminal name="Expression"/>
    </definition>
    <definition>
      <nonterminal name="Expression"/>
      <nonterminal name="Relation"/>
      <nonterminal name="Expression"/>
    </definition>
    <definition>
      <nonterminal name="Expression"/>
      <nonterminal name="Comparison"/>
      <nonterminal name="Expression"/>
    </definition>
    <definition>
      <nonterminal name="Expression"/>
      <terminal>&amp;</terminal>
      <nonterminal name="Expression"/>
    </definition>
    <definition>
      <nonterminal name="Expression"/>
      <terminal>^</terminal>
      <nonterminal name="Expression"/>
    </definition>
    <definition>
      <nonterminal name="Expression"/>
      <terminal>|</terminal>
      <nonterminal name="Expression"/>
    </definition>
    <definition>
      <nonterminal name="Expression"/>
      <terminal>AND</terminal>
      <nonterminal name="Expression"/>
    </definition>
    <definition>
      <nonterminal name="Expression"/>
      <terminal>OR</terminal>
      <nonterminal name="Expression"/>
    </definition>
    <definition>
      <nonterminal name="Assignment"/>
    </definition>
  </rule>
  <rule name="Step">
    <definition>
      <terminal>++</terminal>
    </definition>
    <definition>
      <terminal>--</terminal>
    </definition>
  </rule>
  <rule name="Unary">
    <definition>
      <terminal>delete</terminal>
    </definition>
    <definition>
      <terminal>typeof</terminal>
    </definition>
    <definition>
      <terminal>+</terminal>
    </definition>
    <definition>
      <terminal>-</terminal>
    </definition>
    <definition>
      <terminal>~</terminal>
    </definition>
    <definition>
      <terminal>!</terminal>
    </definition>
    <definition>
      <terminal>not</terminal>
    </definition>
  </rule>
  <rule name="Multiplicative">
    <definition>
      <terminal>*</terminal>
    </definition>
    <definition>
      <terminal>/</terminal>
    </definition>
    <definition>
      <terminal>%</terminal>
    </definition>
    <definition>
      <terminal>//</terminal>
    </definition>
    <definition>
      <terminal>%%</terminal>
    </definition>
  </rule>
  <rule name="Additive">
    <definition>
      <terminal>+</terminal>
    </definition>
    <definition>
      <terminal>-</terminal>
    </definition>
  </rule>
  <rule name="Shift">
    <definition>
      <terminal>&lt;&lt;</terminal>
    </definition>
    <definition>
      <terminal>&gt;&gt;</terminal>
    </definition>
    <definition>
      <terminal>&gt;&gt;&gt;</terminal>
    </definition>
  </rule>
  <rule name="Relation">
    <definition>
      <terminal>of</terminal>
    </definition>
    <definition>
      <terminal>in</terminal>
    </definition>
    <definition>
      <terminal>instanceof</terminal>
    </definition>
  </rule>
  <rule name="Comparison">
    <definition>
      <terminal>&lt;</terminal>
    </definition>
    <definition>
      <terminal>&lt;=</terminal>
    </definition>
    <definition>
      <terminal>&gt;</terminal>
    </definition>
    <definition>
      <terminal>&gt;=</terminal>
    </definition>
    <definition>
      <terminal>==</terminal>
    </definition>
    <definition>
      <terminal>is</terminal>
    </definition>
    <definition>
      <terminal>!=</terminal>
    </definition>
    <definition>
      <terminal>isnt</terminal>
    </definition>
  </rule>
  <rule name="AND">
    <definition>
      <terminal>&amp;&amp;</terminal>
    </definition>
    <definition>
      <terminal>and</terminal>
    </definition>
  </rule>
  <rule name="OR">
    <definition>
      <terminal>||</terminal>
    </definition>
    <definition>
      <terminal>or</terminal>
    </definition>
  </rule>
  <rule name="Assign">
    <definition>
      <terminal>=</terminal>
    </definition>
    <definition>
      <terminal>**=</terminal>
    </definition>
    <definition>
      <nonterminal name="Multiplicative"/>
      <terminal>=</terminal>
    </definition>
    <definition>
      <nonterminal name="Additive"/>
      <terminal>=</terminal>
    </definition>
    <definition>
      <nonterminal name="Shift"/>
      <terminal>=</terminal>
    </definition>
    <definition>
      <terminal>&amp;=</terminal>
    </definition>
    <definition>
      <terminal>^=</terminal>
    </definition>
    <definition>
      <terminal>|=</terminal>
    </definition>
  </rule>
  <rule name="String">
    <definition>
      <terminal>'</terminal>
      <terminal type="regular">^(?:[^\\']|\\[\s\S])*</terminal>
      <terminal>'</terminal>
    </definition>
    <definition>
      <terminal>"</terminal>
      <optional>
        <nonterminal name="StrChars"/>
      </optional>
      <repeated>
        <optional>
          <terminal>#{</terminal>
          <nonterminal name="Expression"/>
          <terminal>}</terminal>
        </optional>
        <optional>
          <nonterminal name="StrChars"/>
        </optional>
      </repeated>
      <terminal>"</terminal>
    </definition>
    <definition>
      <terminal>'''</terminal>
      <terminal type="regular">^(?:[^\\']|\\[\s\S]|'(?!''))*</terminal>
      <terminal>'''</terminal>
    </definition>
    <definition>
      <terminal>"""</terminal>
      <optional>
        <nonterminal name="HereChars"/>
      </optional>
      <repeated>
        <optional>
          <terminal>#{</terminal>
          <nonterminal name="Expression"/>
          <terminal>}</terminal>
        </optional>
        <optional>
          <nonterminal name="HereChars"/>
        </optional>
      </repeated>
      <terminal>"""</terminal>
    </definition>
  </rule>
  <rule name="StrChars">
    <definition>
      <terminal type="regular">^(?:[^\\"#]|\\[\s\S]|\#(?!\{))*</terminal>
    </definition>
  </rule>
  <rule name="HereChars">
    <definition>
      <terminal type="regular">^(?:[^\\"#]|\\[\s\S]|"(?!"")|\#(?!\{))*</terminal>
    </definition>
  </rule>
  <rule name="RegExp">
    <definition>
      <terminal>/</terminal>
      <terminal type="regular">^(?!/)((?:[^[/\n\\]|\\[^\n]|\[(?:\\[^\n]|[^\]\n\\])*\])*)</terminal>
      <terminal>/</terminal>
      <optional>
        <nonterminal name="Flags"/>
      </optional>
    </definition>
    <definition>
      <terminal>///</terminal>
      <terminal type="regular">^(?:[^\\/#]|\\[\s\S]|/(?!//)|\#(?!\{))*</terminal>
      <terminal>///</terminal>
      <optional>
        <nonterminal name="Flags"/>
      </optional>
    </definition>
  </rule>
  <rule name="Flags">
    <definition>
      <terminal type="regular">^(?!.*(.).*\1)[imguy]*$</terminal>
    </definition>
  </rule>
  <rule name="JavaScript">
    <definition>
      <terminal>`</terminal>
      <nonterminal name="JSource"/>
      <terminal>`</terminal>
    </definition>
  </rule>
  <rule name="Assignment">
    <definition>
      <nonterminal name="Assignable"/>
      <nonterminal name="Assign"/>
      <optional>
        <nonterminal name="T"/>
      </optional>
      <nonterminal name="Expression"/>
    </definition>
    <definition>
      <nonterminal name="Assignable"/>
      <nonterminal name="Assign"/>
      <nonterminal name="IN"/>
      <nonterminal name="Expression"/>
      <nonterminal name="OUT"/>
    </definition>
  </rule>
  <rule name="Assignable">
    <definition>
      <nonterminal name="SimpleAssignable"/>
    </definition>
    <definition>
      <nonterminal name="Object"/>
      <comment>destructuring assignment</comment>
    </definition>
    <definition>
      <nonterminal name="Array"/>
      <comment>destructuring assignment</comment>
    </definition>
  </rule>
  <rule name="SimpleAssignable">
    <definition>
      <nonterminal name="Identifier"/>
    </definition>
    <definition>
      <nonterminal name="Value"/>
      <optional>
        <terminal>?</terminal>
      </optional>
      <nonterminal name="Accessor"/>
    </definition>
  </rule>
  <rule name="Identifier">
    <definition>
      <terminal type="regular">^(?!\d)((?:(?!\s)[$\w\x7f-\uffff])+)([^\n\S]*:(?!:))?</terminal>
      <exception>
        <nonterminal name="Reserved"/>
      </exception>
    </definition>
    <definition>
      <nonterminal name="CSXtag"/>
    </definition>
  </rule>
  <rule name="Accessor">
    <definition>
      <terminal>[</terminal>
      <nonterminal name="Index"/>
      <terminal>]</terminal>
    </definition>
    <definition>
      <terminal>.</terminal>
      <nonterminal name="Property"/>
    </definition>
    <definition>
      <terminal>::</terminal>
      <optional>
        <nonterminal name="Property"/>
      </optional>
      <comment>prototype accessor</comment>
    </definition>
  </rule>
  <rule name="Index">
    <definition>
      <nonterminal name="Expression"/>
    </definition>
    <definition>
      <optional>
        <nonterminal name="Expression"/>
      </optional>
      <nonterminal name="RangeDots"/>
      <optional>
        <nonterminal name="Expression"/>
      </optional>
      <comment>slice</comment>
    </definition>
  </rule>
  <rule name="C">
    <comment>optional comma</comment>
    <definition>
      <optional>
        <terminal>,</terminal>
      </optional>
    </definition>
  </rule>
  <rule name="S">
    <comment>SEPARATOR</comment>
    <definition>
      <terminal>,</terminal>
    </definition>
    <definition>
      <nonterminal name="C"/>
      <nonterminal name="T"/>
    </definition>
  </rule>
  <rule name="Object">
    <definition>
      <terminal>{</terminal>
      <nonterminal name="AssignList"/>
      <nonterminal name="C"/>
      <terminal>}</terminal>
    </definition>
  </rule>
  <rule name="AssignList">
    <definition>
      <optional>
        <nonterminal name="AssignList"/>
        <nonterminal name="S"/>
      </optional>
      <nonterminal name="AssignObj"/>
    </definition>
    <definition>
      <optional>
        <nonterminal name="AssignList"/>
        <nonterminal name="C"/>
        <nonterminal name="IN"/>
        <nonterminal name="AssignList"/>
        <nonterminal name="C"/>
        <nonterminal name="OUT"/>
      </optional>
    </definition>
  </rule>
  <rule name="AssignObj">
    <definition>
      <nonterminal name="ObjAssignable"/>
      <optional>
        <terminal>:</terminal>
        <nonterminal name="Expression"/>
      </optional>
    </definition>
    <definition>
      <nonterminal name="ObjAssignable"/>
      <terminal>:</terminal>
      <nonterminal name="IN"/>
      <nonterminal name="Expression"/>
      <nonterminal name="OUT"/>
    </definition>
    <definition>
      <nonterminal name="ObjRestValue"/>
    </definition>
  </rule>
  <rule name="ObjAssignable">
    <definition>
      <nonterminal name="Number"/>
    </definition>
    <definition>
      <nonterminal name="String"/>
    </definition>
    <definition>
      <nonterminal name="SimpleObjAssignable"/>
    </definition>
  </rule>
  <rule name="SimpleObjAssignable">
    <definition>
      <nonterminal name="Identifier"/>
    </definition>
    <definition>
      <optional>
        <nonterminal name="This"/>
        <terminal>.</terminal>
      </optional>
      <nonterminal name="Property"/>
    </definition>
  </rule>
  <rule name="ObjRestValue">
    <definition>
      <nonterminal name="SimpleObjAssignable"/>
      <terminal>...</terminal>
    </definition>
    <definition>
      <terminal>...</terminal>
      <nonterminal name="SimpleObjAssignable"/>
    </definition>
    <definition>
      <nonterminal name="ObjSpreadExpr"/>
      <terminal>...</terminal>
    </definition>
    <definition>
      <terminal>...</terminal>
      <nonterminal name="ObjSpreadExpr"/>
    </definition>
  </rule>
  <rule name="ObjSpreadExpr">
    <definition>
      <nonterminal name="Parenthetical"/>
    </definition>
    <definition>
      <nonterminal name="Object"/>
    </definition>
    <definition>
      <nonterminal name="This"/>
    </definition>
    <definition>
      <nonterminal name="SuperProperty"/>
    </definition>
    <definition>
      <terminal>super</terminal>
      <nonterminal name="Arguments"/>
    </definition>
    <definition>
      <nonterminal name="SimpleObjAssignable"/>
      <nonterminal name="Arguments"/>
    </definition>
    <definition>
      <nonterminal name="ObjSpreadExpr"/>
      <nonterminal name="Accessor"/>
    </definition>
  </rule>
  <rule name="This">
  <comment>reference to current object</comment>
    <definition>
      <terminal>this</terminal>
    </definition>
    <definition>
      <terminal>@</terminal>
    </definition>
  </rule>
  <rule name="SuperProperty">
    <definition>
      <terminal>super</terminal>
      <terminal>.</terminal>
      <nonterminal name="Property"/>
    </definition>
    <definition>
      <terminal>super</terminal>
      <terminal>[</terminal>
      <nonterminal name="Expression"/>
      <terminal>]</terminal>
    </definition>
  </rule>
  <rule name="Class">
    <definition>
      <terminal>class</terminal>
      <optional>
        <nonterminal name="SimpleAssignable"/>
      </optional>
      <optional>
        <terminal>extends</terminal>
        <nonterminal name="Expression"/>
      </optional>
      <optional>
        <nonterminal name="Block"/>
      </optional>
    </definition>
  </rule>
  <rule name="Array">
    <definition>
      <terminal>[</terminal>
      <optional>
        <nonterminal name="ArgList"/>
        <nonterminal name="C"/>
      </optional>
      <terminal>]</terminal>
    </definition>
  </rule>
  <rule name="ArgList">
    <definition>
      <optional>
        <nonterminal name="ArgList"/>
        <nonterminal name="S"/>
      </optional>
      <nonterminal name="Arg"/>
    </definition>
    <definition>
      <optional>
        <nonterminal name="ArgList"/>
        <nonterminal name="C"/>
      </optional>
      <nonterminal name="IN"/>
      <nonterminal name="ArgList"/>
      <nonterminal name="C"/>
      <nonterminal name="OUT"/>
    </definition>
  </rule>
  <rule name="Arg">
    <definition>
      <nonterminal name="Expression"/>
      <optional>
        <terminal>...</terminal>
      </optional>
    </definition>
    <definition>
      <terminal>...</terminal>
      <optional>
        <nonterminal name="Expression"/>
      </optional>
    </definition>
  </rule>
  <rule name="Range">
    <definition>
      <terminal>[</terminal>
      <nonterminal name="Expression"/>
      <nonterminal name="RangeDots"/>
      <nonterminal name="Expression"/>
      <terminal>]</terminal>
    </definition>
  </rule>
  <rule name="RangeDots">
    <definition>
      <terminal>..</terminal>
    </definition>
    <definition>
      <terminal>...</terminal>
    </definition>
  </rule>
  <rule name="Function">
    <definition>
      <optional>
        <terminal>(</terminal>
        <nonterminal name="ParamList"/>
        <terminal>)</terminal>
      </optional>
      <nonterminal name="FuncGlyph"/>
      <nonterminal name="Block"/>
    </definition>
  </rule>
  <rule name="FuncGlyph">
    <definition>
      <terminal>-&gt;</terminal>
      <comment>
        ordinary function
      </comment>
    </definition>
    <definition>
      <terminal>=&gt;</terminal>
      <comment>
        function bound to the current value of &amp;nbsp;
        &lt;b&gt;&lt;code style="color:black"&gt;this&lt;/code&gt;&lt;/b&gt;
      </comment>
    </definition>
  </rule>
  <rule name="ParamList">
    <definition>
      <optional>
        <nonterminal name="ParamList"/>
        <nonterminal name="S"/>
      </optional>
      <nonterminal name="Param"/>
    </definition>
    <definition>
      <optional>
        <nonterminal name="ParamList"/>
        <nonterminal name="C"/>
        <nonterminal name="IN"/>
        <nonterminal name="ParamList"/>
        <nonterminal name="C"/>
        <nonterminal name="OUT"/>
      </optional>
    </definition>
  </rule>
  <rule name="Param">
    <definition>
      <nonterminal name="ParamVar"/>
      <optional>
        <terminal>=</terminal>
        <nonterminal name="Expression"/>
      </optional>
      <comment>default parameter</comment>
    </definition>
    <definition>
      <nonterminal name="ParamVar"/>
      <optional>
        <terminal>...</terminal>
      </optional>
      <comment>rest parameter</comment>
    </definition>
    <definition>
      <terminal>...</terminal>
      <optional>
        <nonterminal name="ParamVar"/>
      </optional>
    </definition>
  </rule>
  <rule name="ParamVar">
    <definition>
      <nonterminal name="Identifier"/>
    </definition>
    <definition>
      <nonterminal name="This"/>
      <terminal>.</terminal>
      <nonterminal name="Property"/>
    </definition>
    <definition>
      <nonterminal name="Object"/>
    </definition>
    <definition>
      <nonterminal name="Array"/>
    </definition>
  </rule>
  <rule name="Invocation">
    <definition>
      <nonterminal name="Value"/>
      <optional>
        <terminal>?</terminal>
      </optional>
      <nonterminal name="Arguments"/>
    </definition>
    <definition>
      <nonterminal name="Value"/>
      <optional>
        <terminal>?</terminal>
      </optional>
      <nonterminal name="String"/>
      <comment>tagged template call</comment>
    </definition>
    <definition>
      <terminal>super</terminal>
      <optional>
        <terminal>?</terminal>
      </optional>
      <nonterminal name="Arguments"/>
    </definition>
    <definition>
      <terminal>do</terminal>
      <nonterminal name="Function"/>
    </definition>
  </rule>
  <rule name="Arguments">
    <definition>
      <nonterminal name="ArgList"/>
      <nonterminal name="C"/>
    </definition>
    <definition>
      <terminal>(</terminal>
      <optional>
        <nonterminal name="ArgList"/>
        <nonterminal name="C"/>
      </optional>
      <terminal>)</terminal>
    </definition>
  </rule>
  <rule name="Yield">
    <definition>
      <terminal>yield</terminal>
    </definition>
    <definition>
      <terminal>yield</terminal>
      <optional>
        <terminal>from</terminal>
      </optional>
      <nonterminal name="Expression"/>
    </definition>
  </rule>
  <rule name="FuncDirective">
    <definition>
      <terminal>yield</terminal>
      <terminal>return</terminal>
      <optional>
        <nonterminal name="Expression"/>
      </optional>
      <comment>forced generator</comment>
    </definition>
    <definition>
      <terminal>await</terminal>
      <terminal>return</terminal>
      <optional>
        <nonterminal name="Expression"/>
      </optional>
      <comment>forced async</comment>
    </definition>
  </rule>
  <rule name="Conditional">
    <definition>
      <nonterminal name="If"/>
      <nonterminal name="Expression"/>
      <nonterminal name="Block"/>
      <repeated>
        <optional>
          <terminal>else</terminal>
          <nonterminal name="If"/>
          <nonterminal name="Expression"/>
          <nonterminal name="Block"/>
        </optional>
      </repeated>
      <optional>
        <terminal>else</terminal>
        <nonterminal name="Block"/>
      </optional>
    </definition>
    <definition>
      <nonterminal name="Expression"/>
      <nonterminal name="If"/>
      <nonterminal name="Expression"/>
    </definition>
    <definition>
      <nonterminal name="Statement"/>
      <nonterminal name="If"/>
      <nonterminal name="Expression"/>
    </definition>
  </rule>
  <rule name="If">
    <definition>
      <terminal>if</terminal>
    </definition>
    <definition>
      <terminal>unless</terminal>
    </definition>
  </rule>
  <rule name="Switch">
    <definition>
      <terminal>switch</terminal>
      <optional>
        <nonterminal name="Expression"/>
      </optional>
      <nonterminal name="IN"/>
      <repeated>
        <terminal>when</terminal>
        <nonterminal name="Cases"/>
        <nonterminal name="Block"/>
        <optional>
          <nonterminal name="T"/>
        </optional>
      </repeated>
      <optional>
        <terminal>else</terminal>
        <nonterminal name="Block"/>
      </optional>
      <nonterminal name="OUT"/>
    </definition>
  </rule>
  <rule name="Cases">
    <definition>
      <nonterminal name="Expression"/>
      <repeated>
        <optional>
          <terminal>,</terminal>
          <nonterminal name="Expression"/>
        </optional>
      </repeated>
    </definition>
  </rule>
  <rule name="Loop">
    <definition>
      <terminal>loop</terminal>
      <nonterminal name="Block"/>
    </definition>
    <definition>
      <terminal>loop</terminal>
      <nonterminal name="Expression"/>
    </definition>
    <definition>
      <nonterminal name="LoopCondition"/>
      <nonterminal name="Block"/>
    </definition>
    <definition>
      <nonterminal name="Expression"/>
      <nonterminal name="LoopCondition"/>
    </definition>
    <definition>
      <nonterminal name="Statement"/>
      <nonterminal name="LoopCondition"/>
    </definition>
  </rule>
  <rule name="LoopCondition">
    <definition>
      <terminal>while</terminal>
      <nonterminal name="Expression"/>
      <optional>
        <terminal>when</terminal>
        <nonterminal name="Expression"/>
      </optional>
    </definition>
    <definition>
      <terminal>until</terminal>
      <nonterminal name="Expression"/>
      <optional>
        <terminal>when</terminal>
        <nonterminal name="Expression"/>
      </optional>
    </definition>
  </rule>
  <rule name="ForLoop">
    <definition>
      <nonterminal name="For"/>
      <nonterminal name="Block"/>
    </definition>
    <definition>
      <nonterminal name="Expression"/>
      <nonterminal name="For"/>
    </definition>
    <definition>
      <nonterminal name="Statement"/>
      <nonterminal name="For"/>
    </definition>
  </rule>
  <rule name="For">
    <definition>
      <terminal>for</terminal>
      <nonterminal name="Range"/>
      <optional>
        <terminal>by</terminal>
        <nonterminal name="Expression"/>
      </optional>
    </definition>
    <definition>
      <terminal>for</terminal>
      <optional>
        <terminal>own</terminal>
      </optional>
      <nonterminal name="ParamVar"/>
      <optional>
        <terminal>,</terminal>
        <nonterminal name="ParamVar"/>
      </optional>
      <nonterminal name="ForSource"/>
    </definition>
  </rule>
  <rule name="ForSource">
    <definition>
      <terminal>in</terminal>
      <nonterminal name="Expression"/>
      <optional>
        <terminal>when</terminal>
        <nonterminal name="Expression"/>
      </optional>
      <optional>
        <terminal>by</terminal>
        <nonterminal name="Expression"/>
      </optional>
    </definition>
    <definition>
      <terminal>in</terminal>
      <nonterminal name="Expression"/>
      <optional>
        <terminal>by</terminal>
        <nonterminal name="Expression"/>
      </optional>
      <optional>
        <terminal>when</terminal>
        <nonterminal name="Expression"/>
      </optional>
    </definition>
    <definition>
      <terminal>of</terminal>
      <nonterminal name="Expression"/>
      <optional>
        <terminal>when</terminal>
        <nonterminal name="Expression"/>
      </optional>
    </definition>
    <definition>
      <terminal>from</terminal>
      <nonterminal name="Expression"/>
      <optional>
        <terminal>when</terminal>
        <nonterminal name="Expression"/>
      </optional>
    </definition>
  </rule>
  <rule name="Try">
    <definition>
      <terminal>try</terminal>
      <nonterminal name="Block"/>
      <optional>
        <nonterminal name="Catch"/>
      </optional>
      <optional>
        <terminal>finally</terminal>
        <nonterminal name="Block"/>
      </optional>
    </definition>
  </rule>
  <rule name="Catch">
    <definition>
      <terminal>catch</terminal>
      <optional>
        <nonterminal name="Identifier"/>
      </optional>
      <nonterminal name="Block"/>
    </definition>
    <definition>
      <terminal>catch</terminal>
      <nonterminal name="Object"/>
      <nonterminal name="Block"/>
    </definition>
  </rule>
  <rule name="Throw">
    <definition>
      <terminal>throw</terminal>
      <nonterminal name="Expression"/>
    </definition>
    <definition>
      <terminal>throw</terminal>
      <nonterminal name="IN"/>
      <nonterminal name="Object"/>
      <nonterminal name="OUT"/>
    </definition>
  </rule>
  <rule name="Statement">
    <definition>
      <terminal>break</terminal>
    </definition>
    <definition>
      <terminal>continue</terminal>
    </definition>
    <definition>
      <terminal>return</terminal>
      <optional>
        <nonterminal name="Expression"/>
      </optional>
    </definition>
    <definition>
      <terminal>return</terminal>
      <nonterminal name="IN"/>
      <nonterminal name="Object"/>
      <nonterminal name="OUT"/>
    </definition>
    <definition>
      <nonterminal name="Import"/>
    </definition>
    <definition>
      <nonterminal name="Export"/>
    </definition>
  </rule>
  <rule name="Import">
    <definition>
      <terminal>import</terminal>
      <optional>
        <terminal>{}</terminal>
        <terminal>from</terminal>
      </optional>
      <nonterminal name="String"/>
    </definition>
    <definition>
      <terminal>import</terminal>
      <nonterminal name="Identifier"/>
      <terminal>from</terminal>
      <nonterminal name="String"/>
    </definition>
    <definition>
      <terminal>import</terminal>
      <optional>
        <nonterminal name="Identifier"/>
        <terminal>,</terminal>
      </optional>
      <terminal>*</terminal>
      <terminal>as</terminal>
      <nonterminal name="Identifier"/>
      <terminal>from</terminal>
      <nonterminal name="String"/>
    </definition>
    <definition>
      <terminal>import</terminal>
      <optional>
        <nonterminal name="Identifier"/>
        <terminal>,</terminal>
      </optional>
      <terminal>{</terminal>
      <nonterminal name="ImportSpecifierList"/>
      <nonterminal name="C"/>
      <terminal>}</terminal>
      <terminal>from</terminal>
      <nonterminal name="String"/>
    </definition>
  </rule>
  <rule name="ImportSpecifierList">
    <definition>
      <optional>
        <nonterminal name="ImportSpecifierList"/>
        <nonterminal name="S"/>
      </optional>
      <nonterminal name="ImportSpecifier"/>
    </definition>
    <definition>
      <optional>
        <nonterminal name="ImportSpecifierList"/>
        <nonterminal name="C"/>
      </optional>
      <nonterminal name="IN"/>
      <nonterminal name="ImportSpecifierList"/>
      <nonterminal name="C"/>
      <nonterminal name="OUT"/>
    </definition>
  </rule>
  <rule name="ImportSpecifier">
    <definition>
      <nonterminal name="Identifier"/>
      <optional>
        <terminal>as</terminal>
        <nonterminal name="Identifier"/>
      </optional>
    </definition>
    <definition>
      <terminal>default</terminal>
      <optional>
        <terminal>as</terminal>
        <nonterminal name="Identifier"/>
      </optional>
    </definition>
  </rule>
  <rule name="Export">
    <definition>
      <terminal>export</terminal>
      <terminal>default</terminal>
      <nonterminal name="Expression"/>
    </definition>
    <definition>
      <terminal>export</terminal>
      <nonterminal name="Identifier"/>
      <terminal>=</terminal>
      <optional>
        <nonterminal name="T"/>
      </optional>
      <nonterminal name="Expression"/>
    </definition>
    <definition>
      <terminal>export</terminal>
      <nonterminal name="Identifier"/>
      <terminal>=</terminal>
      <nonterminal name="IN"/>
      <nonterminal name="Expression"/>
      <nonterminal name="OUT"/>
    </definition>
    <definition>
      <terminal>export</terminal>
      <nonterminal name="Class"/>
    </definition>
    <definition>
      <terminal>export</terminal>
      <terminal>{</terminal>
      <optional>
        <nonterminal name="ExportSpecifierList"/>
        <nonterminal name="C"/>
      </optional>
      <terminal>}</terminal>
      <optional>
        <terminal>from</terminal>
        <nonterminal name="String"/>
      </optional>
    </definition>
    <definition>
      <terminal>export</terminal>
      <terminal>*</terminal>
      <terminal>from</terminal>
      <nonterminal name="String"/>
    </definition>
  </rule>
  <rule name="ExportSpecifierList">
    <definition>
      <optional>
        <nonterminal name="ExportSpecifierList"/>
        <nonterminal name="S"/>
      </optional>
      <nonterminal name="ExportSpecifier"/>
    </definition>
    <definition>
      <optional>
        <nonterminal name="ExportSpecifierList"/>
        <nonterminal name="C"/>
      </optional>
      <nonterminal name="IN"/>
      <nonterminal name="ExportSpecifierList"/>
      <nonterminal name="C"/>
      <nonterminal name="OUT"/>
    </definition>
  </rule>
  <rule name="ExportSpecifier">
    <definition>
      <nonterminal name="Identifier"/>
      <optional>
        <terminal>as</terminal>
        <nonterminal name="Identifier"/>
      </optional>
    </definition>
    <definition>
      <nonterminal name="Identifier"/>
      <terminal>as</terminal>
      <terminal>default</terminal>
    </definition>
    <definition>
      <terminal>default</terminal>
      <optional>
        <terminal>as</terminal>
        <nonterminal name="Identifier"/>
      </optional>
    </definition>
  </rule>
  <rule name="Reserved">
    <definition>
      <terminal>arguments</terminal>
    </definition>
    <definition>
      <terminal>case</terminal>
    </definition>
    <definition>
      <terminal>const</terminal>
    </definition>
    <definition>
      <terminal>enum</terminal>
    </definition>
    <definition>
      <terminal>eval</terminal>
    </definition>
    <definition>
      <terminal>function</terminal>
    </definition>
    <definition>
      <terminal>implements</terminal>
    </definition>
    <definition>
      <terminal>inteface</terminal>
    </definition>
    <definition>
      <terminal>let</terminal>
    </definition>
    <definition>
      <terminal>native</terminal>
    </definition>
    <definition>
      <terminal>package</terminal>
    </definition>
    <definition>
      <terminal>private</terminal>
    </definition>
    <definition>
      <terminal>protected</terminal>
    </definition>
    <definition>
      <terminal>public</terminal>
    </definition>
    <definition>
      <terminal>static</terminal>
    </definition>
    <definition>
      <terminal>var</terminal>
    </definition>
    <definition>
      <terminal>void</terminal>
    </definition>
    <definition>
      <terminal>with</terminal>
    </definition>
  </rule>
</syntax>
