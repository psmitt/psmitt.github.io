<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE syntax SYSTEM "Syntax.dtd">
<?xml-stylesheet type="text/xsl" href="Syntax.xsl"?>
<syntax language="UTFool Syntactic Grammar" start="CompilationUnit">
  <comment>
   Terminal symbols (
   &lt;span
   class="case-insensitive"&gt;
   delimiters &lt;/span&gt;,
   &lt;span
   class="case-insensitive"&gt;
   operators &lt;/span&gt;,
   &lt;span class="terminal"
   style="color:black"&gt;
   keywords &lt;/span&gt;)
   &lt;br/&gt;
   can be overridden by any unique
   Unicode character sequence.
  </comment>
  <comment>
   &lt;b&gt;LIST STRUCTURE&lt;/b&gt;
  </comment>
  <rule name="List">
    <definition>
      <nonterminal name="ListElement"/>
      <repeated>
        <optional>
          <terminal type="case-insensitive">ListSeparator</terminal>
          <nonterminal name="ListElement"/>
        </optional>
      </repeated>
    </definition>
  </rule>
  <comment>
   ListSeparator is a user-defined operator.
  </comment>
  <comment>
   &lt;b&gt;NAMES&lt;/b&gt;
  </comment>
  <rule name="ClassName">
    <definition>
      <nonterminal name="Name"/>
      <optional>
        <terminal type="case-insensitive">
         StartOfTypeList
        </terminal>
        <nonterminal name="TypeList"/>
        <terminal type="case-insensitive">
         EndOfTypeList
        </terminal>
      </optional>
    </definition>
  </rule>
  <rule name="TypeName">
    <definition>
      <repeated>
        <optional>
          <nonterminal name="Name"/>
          <terminal type="case-insensitive">
           Access
          </terminal>
        </optional>
      </repeated>
      <nonterminal name="ClassName"/>
    </definition>
  </rule>
  <rule name="Type">
    <definition>
      <nonterminal name="TypeName"/>
      <repeated>
        <optional>
          <terminal type="case-insensitive">
           StartOfArray
          </terminal>
          <terminal type="case-insensitive">
           EndOfArray
          </terminal>
        </optional>
      </repeated>
    </definition>
  </rule>
  <comment>
   &lt;b&gt;GENERAL GRAMMAR&lt;/b&gt;
  </comment>
  <rule name="CompilationUnit">
    <definition>
      <repeated>
        <nonterminal name="BlockElement"/>
      </repeated>
    </definition>
  </rule>
  <rule name="Block">
    <definition>
      <nonterminal name="IND"/>
      <repeated>
        <optional>
          <nonterminal name="BlockElement"/>
        </optional>
      </repeated>
      <nonterminal name="UND"/>
    </definition>
  </rule>
  <comment>
   LineBreak is assumed to preserve Indentation level.&lt;br/&gt;
   IND means increased Indentation level after LineBreak.&lt;br/&gt;
   UND ( unindentation ) means decreased Indentation level after LineBreak.&lt;br/&gt;
  </comment>
  <rule name="BlockElement">
    <comment>interpretation unit</comment>
    <definition>
      <terminal>label</terminal>
      <nonterminal name="Name"/>
    </definition>
    <definition>
      <nonterminal name="Definition"/>
    </definition>
    <definition>
      <nonterminal name="Statement"/>
    </definition>
    <definition>
      <nonterminal name="EmbeddedCode"/>
      <optional>
        <nonterminal name="BlockElement"/>
      </optional>
    </definition>
    <definition>
      <nonterminal name="EmbeddedCode"/>
      <nonterminal name="Reference"/>
    </definition>
  </rule>
  <rule name="Definition">
    <definition>
      <nonterminal name="Constants"/>
    </definition>
    <definition>
      <nonterminal name="Interface"/>
    </definition>
    <definition>
      <nonterminal name="Class"/>
    </definition>
    <definition>
      <nonterminal name="Function"/>
    </definition>
    <definition>
      <nonterminal name="Variable"/>
    </definition>
  </rule>
  <rule name="Constants">
    <definition>
      <terminal>constants</terminal>
      <nonterminal name="Name"/>
      <nonterminal name="EndOfLine"/>
      <nonterminal name="IND"/>
      <repeated>
        <optional>
          <nonterminal name="NameList"/>
          <nonterminal name="EndOfLine"/>
        </optional>
      </repeated>
      <nonterminal name="UND"/>
    </definition>
  </rule>
  <rule name="Interface">
    <definition>
      <terminal>interface</terminal>
      <nonterminal name="ClassName"/>
      <optional>
        <terminal>as</terminal>
        <nonterminal name="TypeNameList"/>
      </optional>
      <nonterminal name="Block"/>
    </definition>
  </rule>
  <rule name="Class">
    <definition>
      <terminal>class</terminal>
      <nonterminal name="ClassName"/>
      <optional>
        <terminal>super</terminal>
        <nonterminal name="TypeName"/>
      </optional>
      <optional>
        <terminal>as</terminal>
        <nonterminal name="TypeNameList"/>
      </optional>
      <nonterminal name="Block"/>
    </definition>
  </rule>
  <rule name="Function">
    <definition>
      <nonterminal name="FunctionHead"/>
      <optional>
        <terminal>throw</terminal>
        <nonterminal name="TypeNameList"/>
      </optional>
      <repeated>
        <optional>
          <terminal>parameter</terminal>
          <nonterminal name="Parameter"/>
        </optional>
      </repeated>
      <nonterminal name="Block"/>
    </definition>
  </rule>
  <rule name="FunctionHead">
    <definition>
      <terminal>function</terminal>
      <terminal>constructor</terminal>
    </definition>
    <definition>
      <terminal>function</terminal>
      <nonterminal name="Name"/>
      <optional>
        <terminal>as</terminal>
        <nonterminal name="Type"/>
      </optional>
    </definition>
  </rule>
  <rule name="Parameter">
    <definition>
      <nonterminal name="Name"/>
      <optional>
        <terminal>as</terminal>
        <nonterminal name="Type"/>
      </optional>
      <optional>
        <terminal>assign</terminal>
        <nonterminal name="Expression"/>
      </optional>
    </definition>
  </rule>
  <rule name="Variable">
    <definition>
      <nonterminal name="Name"/>
      <optional>
        <terminal>as</terminal>
        <nonterminal name="Type"/>
      </optional>
      <terminal>assign</terminal>
      <nonterminal name="Expression"/>
    </definition>
    <definition>
      <nonterminal name="Name"/>
      <terminal>as</terminal>
      <nonterminal name="TypeName"/>
      <optional>
        <terminal type="case-insensitive">Invocation</terminal>
      </optional>
      <comment>constructor call</comment>
    </definition>
    <definition>
      <nonterminal name="Name"/>
      <terminal>as</terminal>
      <nonterminal name="TypeName"/>
      <nonterminal name="ArgumentList"/>
      <comment>constructor call</comment>
    </definition>
    <definition>
      <nonterminal name="Name"/>
      <terminal>as</terminal>
      <nonterminal name="TypeName"/>
      <repeated>
        <optional>
          <terminal type="case-insensitive">
           StartOfArray
          </terminal>
          <nonterminal name="Number"/>
          <terminal type="case-insensitive">
           EndOfArray
          </terminal>
        </optional>
      </repeated>
      <comment>fixed length array</comment>
    </definition>
  </rule>
  <rule name="Expression">
    <definition>
      <nonterminal name="Literal"/>
    </definition>
    <definition>
      <nonterminal name="Array"/>
    </definition>
    <definition>
      <nonterminal name="Reference"/>
    </definition>
    <definition>
      <nonterminal name="Expression"/>
      <terminal type="case-insensitive">UnaryOperator</terminal>
      <comment>postfix</comment>
    </definition>
    <definition>
      <terminal type="case-insensitive">UnaryOperator</terminal>
      <nonterminal name="Expression"/>
      <comment>prefix</comment>
    </definition>
    <definition>
      <nonterminal name="Expression"/>
      <terminal type="case-insensitive">BinaryOperator</terminal>
      <nonterminal name="Expression"/>
    </definition>
    <definition>
      <nonterminal name="Expression"/>
      <terminal type="case-insensitive">TernaryTrue</terminal>
      <optional>
        <nonterminal name="Expression"/>
      </optional>
      <terminal type="case-insensitive">TernaryFalse</terminal>
      <nonterminal name="Expression"/>
      <comment>null-coalescing or ternary expression</comment>
    </definition>
    <definition>
      <nonterminal name="Expression"/>
      <terminal type="case-insensitive">TernaryTrue</terminal>
      <terminal type="case-insensitive">BinaryOperator</terminal>
      <nonterminal name="Expression"/>
      <terminal type="case-insensitive">RelationalOperator</terminal>
      <nonterminal name="Expression"/>
      <comment>existence-based relational expression</comment>
    </definition>
    <definition>
      <terminal>if</terminal>
      <nonterminal name="Expression"/>
      <terminal>then</terminal>
      <nonterminal name="Expression"/>
      <terminal>else</terminal>
      <nonterminal name="Expression"/>
      <comment>ternary expression</comment>
    </definition>
    <definition>
      <terminal type="case-insensitive">
       StartOfExpression
      </terminal>
      <nonterminal name="Expression"/>
      <terminal type="case-insensitive">
       EndOfExpression
      </terminal>
      <comment>parenthetical grouping</comment>
    </definition>
  </rule>
  <rule name="Array">
    <comment>initialized, fixed length, anonymous array</comment>
    <definition>
      <terminal type="case-insensitive">
       StartOfArray
      </terminal>
      <optional>
        <nonterminal name="ExpressionList"/>
      </optional>
      <optional>
        <nonterminal name="IND"/>
        <repeated>
          <nonterminal name="ExpressionList"/>
          <nonterminal name="EndOfLine"/>
        </repeated>
        <nonterminal name="UND"/>
      </optional>
      <terminal type="case-insensitive">
       EndOfArray
      </terminal>
    </definition>
    <definition>
      <terminal>array</terminal>
      <optional>
        <nonterminal name="ExpressionList"/>
      </optional>
      <nonterminal name="EndOfLine"/>
      <optional>
        <nonterminal name="IND"/>
        <repeated>
          <nonterminal name="ExpressionList"/>
          <nonterminal name="EndOfLine"/>
        </repeated>
        <nonterminal name="UND"/>
      </optional>
    </definition>
  </rule>
  <rule name="Reference">
    <definition>
      <terminal>this</terminal>
      <comment>object self reference, reserved name</comment>
    </definition>
    <definition>
      <terminal>super</terminal>
      <comment>object parent reference, reserved name</comment>
    </definition>
    <definition>
      <nonterminal name="Name"/>
    </definition>
    <definition>
      <nonterminal name="FunctionCall"/>
    </definition>
    <definition>
      <nonterminal name="Reference"/>
      <terminal type="case-insensitive">Access</terminal>
      <nonterminal name="Reference"/>
      <comment>direct access</comment>
    </definition>
    <definition>
      <nonterminal name="Reference"/>
      <terminal type="case-insensitive">
       StartOfArray
      </terminal>
      <nonterminal name="Expression"/>
      <terminal type="case-insensitive">
       EndOfArray
      </terminal>
      <comment>computed access</comment>
    </definition>
  </rule>
  <rule name="FunctionCall">
    <definition>
      <nonterminal name="Reference"/>
      <terminal type="case-insensitive">Invocation</terminal>
    </definition>
    <definition>
      <nonterminal name="Reference"/>
      <nonterminal name="ArgumentList"/>
    </definition>
  </rule>
  <rule name="Argument">
    <definition>
      <nonterminal name="Expression"/>
    </definition>
    <definition>
      <optional>
        <terminal>parameter</terminal>
        <nonterminal name="NameList"/>
      </optional>
      <terminal>function</terminal>
      <nonterminal name="Block"/>
      <optional>
        <terminal type="case-insensitive">Invocation</terminal>
        <nonterminal name="ArgumentList"/>
      </optional>
      <comment>anonymous function</comment>
    </definition>
    <definition>
      <nonterminal name="SuperCall"/>
      <terminal>class</terminal>
      <nonterminal name="Block"/>
      <optional>
        <terminal type="case-insensitive">Invocation</terminal>
        <terminal type="case-insensitive">Access</terminal>
        <nonterminal name="FunctionCall"/>
      </optional>
      <comment>anonymous class</comment>
    </definition>
  </rule>
  <comment>
   Anonymous function and class are supposed
   to be the last argument of a function call.
  </comment>
  <rule name="SuperCall">
    <definition>
      <terminal type="case-insensitive">New</terminal>
      <nonterminal name="TypeName"/>
      <terminal type="case-insensitive">
       Invocation
      </terminal>
    </definition>
    <definition>
      <terminal type="case-insensitive">
       StartOfExpression
      </terminal>
      <terminal type="case-insensitive">New</terminal>
      <nonterminal name="TypeName"/>
      <nonterminal name="ArgumentList"/>
      <terminal type="case-insensitive">
       EndOfExpression
      </terminal>
    </definition>
  </rule>
  <rule name="Statement">
    <definition>
      <nonterminal name="LineStatement"/>
    </definition>
    <definition>
      <nonterminal name="BlockStatement"/>
    </definition>
  </rule>
  <rule name="LineStatement">
    <definition>
      <nonterminal name="FunctionCall"/>
    </definition>
    <definition>
      <nonterminal name="Assignment"/>
    </definition>
    <definition>
      <nonterminal name="ControlTransfer"/>
    </definition>
    <definition>
      <nonterminal name="Reference"/>
      <optional>
        <terminal type="case-insensitive">PostIncrement</terminal>
      </optional>
    </definition>
    <definition>
      <nonterminal name="Reference"/>
      <optional>
        <terminal type="case-insensitive">PostDecrement</terminal>
      </optional>
    </definition>
  </rule>
  <rule name="Assignment">
    <definition>
      <nonterminal name="Reference"/>
      <optional>
        <terminal type="case-insensitive">TernaryTrue</terminal>
      </optional>
      <terminal>assign</terminal>
      <nonterminal name="Expression"/>
      <comment>[ existential ] assignment</comment>
    </definition>
    <definition>
      <nonterminal name="Reference"/>
      <terminal type="case-insensitive">BinaryOperator</terminal>
      <terminal>assign</terminal>
      <nonterminal name="Expression"/>
      <comment>compound assignment</comment>
    </definition>
    <definition>
      <terminal type="case-insensitive">
       StartOfArray
      </terminal>
      <nonterminal name="References"/>
      <terminal type="case-insensitive">
       EndOfArray
      </terminal>
      <terminal>assign</terminal>
      <nonterminal name="Expression"/>
      <comment>destructuring assignment</comment>
    </definition>
  </rule>
  <rule name="References">
    <definition>
      <nonterminal name="ReferenceList"/>
      <optional>
        <terminal type="case-insensitive">ListSeparator</terminal>
      </optional>
      <terminal>ellipsis</terminal>
      <optional>
        <terminal type="case-insensitive">ListSeparator</terminal>
        <nonterminal name="ReferenceList"/>
      </optional>
    </definition>
    <definition>
      <optional>
        <terminal>ellipsis</terminal>
        <terminal type="case-insensitive">ListSeparator</terminal>
      </optional>
      <nonterminal name="ReferenceList"/>
    </definition>
  </rule>
  <rule name="ControlTransfer">
    <definition>
      <terminal>await</terminal>
      <nonterminal name="Expression"/>
    </definition>
    <definition>
      <terminal>break</terminal>
      <optional>
        <nonterminal name="Expression"/>
      </optional>
    </definition>
    <definition>
      <terminal>break</terminal>
      <nonterminal name="Name"/>
    </definition>
    <definition>
      <terminal>continue</terminal>
      <optional>
        <nonterminal name="Number"/>
      </optional>
    </definition>
    <definition>
      <terminal>continue</terminal>
      <nonterminal name="Name"/>
    </definition>
    <definition>
      <terminal>fallthrough</terminal>
      <comment>
       last statement of a
       &lt;span class="terminal" style="color:black"&gt;case
       &lt;/span&gt; block
      </comment>
    </definition>
    <definition>
      <terminal>goto</terminal>
      <nonterminal name="Name"/>
    </definition>
    <definition>
      <terminal>return</terminal>
      <optional>
        <nonterminal name="Expression"/>
      </optional>
    </definition>
    <definition>
      <terminal>throw</terminal>
      <nonterminal name="Expression"/>
    </definition>
    <definition>
      <terminal>yield</terminal>
      <nonterminal name="Expression"/>
    </definition>
  </rule>
  <rule name="BlockStatement">
    <definition>
      <nonterminal name="Selection"/>
    </definition>
    <definition>
      <nonterminal name="Iteration"/>
    </definition>
    <definition>
      <nonterminal name="ExceptionHandling"/>
    </definition>
  </rule>
  <rule name="Selection">
    <definition>
      <terminal>select</terminal>
      <nonterminal name="Expression"/>
      <nonterminal name="IND"/>
      <repeated>
        <nonterminal name="Case"/>
      </repeated>
      <optional>
        <nonterminal name="Else"/>
      </optional>
      <nonterminal name="UND"/>
      <comment>case selection</comment>
    </definition>
    <definition>
      <terminal>if</terminal>
      <nonterminal name="Expression"/>
      <terminal>then</terminal>
      <nonterminal name="LineStatement"/>
      <comment>conditional statement</comment>
    </definition>
    <definition>
      <nonterminal name="LineStatement"/>
      <nonterminal name="Condition"/>
      <comment>conditional statement</comment>
    </definition>
    <definition>
      <nonterminal name="Condition"/>
      <nonterminal name="Block"/>
      <optional>
        <nonterminal name="Else"/>
      </optional>
      <comment>conditional statement</comment>
    </definition>
  </rule>
  <rule name="Case">
    <definition>
      <terminal>if</terminal>
      <nonterminal name="ExpressionList"/>
      <terminal>then</terminal>
      <nonterminal name="LineStatement"/>
    </definition>
    <definition>
      <terminal>if</terminal>
      <nonterminal name="ExpressionList"/>
      <nonterminal name="Block"/>
    </definition>
  </rule>
  <rule name="Else">
    <definition>
      <terminal>else</terminal>
      <nonterminal name="Statement"/>
    </definition>
    <definition>
      <terminal>else</terminal>
      <nonterminal name="Block"/>
    </definition>
  </rule>
  <rule name="Condition">
    <definition>
      <terminal>if</terminal>
      <nonterminal name="Expression"/>
    </definition>
    <definition>
      <terminal>unless</terminal>
      <nonterminal name="Expression"/>
    </definition>
  </rule>
  <rule name="Iteration">
    <definition>
      <terminal>iterate</terminal>
      <terminal>while</terminal>
      <nonterminal name="Expression"/>
      <nonterminal name="Block"/>
    </definition>
    <definition>
      <terminal>iterate</terminal>
      <terminal>until</terminal>
      <nonterminal name="Expression"/>
      <nonterminal name="Block"/>
    </definition>
    <definition>
      <terminal>iterate</terminal>
      <nonterminal name="Block"/>
      <terminal>while</terminal>
      <nonterminal name="Expression"/>
    </definition>
    <definition>
      <terminal>iterate</terminal>
      <nonterminal name="Block"/>
      <terminal>until</terminal>
      <nonterminal name="Expression"/>
    </definition>
    <definition>
      <terminal>iterate</terminal>
      <nonterminal name="Name"/>
      <terminal>in</terminal>
      <nonterminal name="Range"/>
      <optional>
        <terminal>by</terminal>
        <nonterminal name="Step"/>
      </optional>
      <nonterminal name="Block"/>
    </definition>
    <definition>
      <terminal>iterate</terminal>
      <nonterminal name="Name"/>
      <optional>
        <terminal>by</terminal>
        <nonterminal name="Name"/>
      </optional>
      <terminal>in</terminal>
      <nonterminal name="Collection"/>
      <optional>
        <terminal>as</terminal>
        <nonterminal name="Type"/>
      </optional>
      <nonterminal name="Block"/>
      <comment>for each Item [ by Index ]</comment>
    </definition>
    <definition>
      <terminal>iterate</terminal>
      <nonterminal name="Name"/>
      <terminal>of</terminal>
      <optional>
        <nonterminal name="Name"/>
        <terminal>in</terminal>
      </optional>
      <nonterminal name="Expression"/>
      <optional>
        <terminal>as</terminal>
        <nonterminal name="TypeList"/>
      </optional>
      <nonterminal name="Block"/>
      <comment>for [ Value of ] each Key of Map</comment>
    </definition>
  </rule>
  <rule name="Range">
    <definition>
      <nonterminal name="Expression"/>
      <terminal>ellipsis</terminal>
      <optional>
        <terminal type="case-insensitive">RelationalOperator</terminal>
      </optional>
      <nonterminal name="Expression"/>
      <comment>less than by default</comment>
    </definition>
  </rule>
  <rule name="Step">
    <definition>
      <optional>
        <terminal type="case-insensitive">BinaryOperator</terminal>
      </optional>
      <nonterminal name="Expression"/>
      <comment>addition or subtraction by default</comment>
    </definition>
  </rule>
  <rule name="Collection">
    <definition>
      <nonterminal name="Array"/>
    </definition>
    <definition>
      <nonterminal name="Expression"/>
    </definition>
  </rule>
  <rule name="ExceptionHandling">
    <definition>
      <nonterminal name="TryBlock"/>
      <repeated>
        <optional>
          <nonterminal name="CatchBlock"/>
        </optional>
      </repeated>
      <optional>
        <terminal>finally</terminal>
        <nonterminal name="Block"/>
      </optional>
    </definition>
  </rule>
  <rule name="TryBlock">
    <definition>
      <terminal>try</terminal>
      <repeated>
        <optional>
          <terminal>parameter</terminal>
          <nonterminal name="Variable"/>
        </optional>
      </repeated>
      <nonterminal name="Block"/>
    </definition>
  </rule>
  <rule name="CatchBlock">
    <definition>
      <terminal>catch</terminal>
      <optional>
        <nonterminal name="Name"/>
        <terminal>as</terminal>
        <nonterminal name="Type"/>
      </optional>
      <nonterminal name="Block"/>
    </definition>
  </rule>
</syntax>
